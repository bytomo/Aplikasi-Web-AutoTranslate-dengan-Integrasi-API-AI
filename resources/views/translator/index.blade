@extends('layouts.app')

@section('title', 'Penerjemah Otomatis')

@section('content')
<div class="py-6">
    <div class="max-w-7xl mx-auto sm:px-6 lg:px-8 space-y-6">

        <!-- Form Penerjemah -->
        <div class="fx-card fx-hover p-4">
            <h2 class="text-lg font-semibold fx-title mb-4">Penerjemah Otomatis</h2>

            @php
                $languages = [
                    ['code' => 'id', 'name' => 'Indonesian'],
                    ['code' => 'en', 'name' => 'English'],
                    ['code' => 'ja', 'name' => 'Japanese'],
                    ['code' => 'ar', 'name' => 'Arabic'],
                    ['code' => 'fr', 'name' => 'French'],
                ];
            @endphp

            <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
                <select id="source_lang" class="fx-field">
                    @foreach($languages as $lang)
                        <option value="{{ $lang['code'] }}" {{ $lang['code'] === 'en' ? 'selected' : '' }}>
                            {{ $lang['name'] }} ({{ $lang['code'] }})
                        </option>
                    @endforeach
                </select>

                <button id="swap_btn" class="fx-btn text-sm">↔ Tukar</button>

                <select id="target_lang" class="fx-field">
                    @foreach($languages as $lang)
                        <option value="{{ $lang['code'] }}" {{ $lang['code'] === 'id' ? 'selected' : '' }}>
                            {{ $lang['name'] }} ({{ $lang['code'] }})
                        </option>
                    @endforeach
                </select>
            </div>

            <div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-4">
                <textarea id="source_text" rows="8" class="fx-field w-full" placeholder="Ketik atau paste teks..."></textarea>

                <div class="flex flex-col">
                    <textarea id="translated_text" rows="8" class="fx-field w-full bg-gray-900 mb-2" readonly></textarea>
                    <div class="flex items-center gap-3 text-xs">
                        <span id="char_count" class="text-gray-400">0</span>
                        <button id="copy_btn" type="button" class="fx-btn text-xs">Salin hasil</button>
                        <span id="status" class="text-green-400"></span>
                    </div>
                </div>
            </div>

            <div class="mt-4 flex items-center gap-3">
                <button id="translate_btn" class="fx-btn">Terjemahkan</button>
                <div id="loader" class="hidden fx-loader"><span></span><span></span><span></span></div>
                <div id="error" class="text-sm text-red-400"></div>
            </div>
        </div>

        <!-- Riwayat Terbaru -->
        <div class="fx-card fx-hover p-4">
            <h3 class="text-lg font-semibold fx-title mb-3">Riwayat terbaru</h3>
            <div class="divide-y divide-gray-600">
                @forelse ($recent as $r)
                    <div class="py-3">
                        <div class="text-sm text-gray-400">
                            {{ strtoupper($r->source_lang) }} → {{ strtoupper($r->target_lang) }} • {{ $r->created_at->diffForHumans() }}
                        </div>
                        <div class="mt-1 text-gray-100">{{ $r->source_text }}</div>
                        <div class="mt-1 text-green-300">{{ $r->translated_text }}</div>
                    </div>
                @empty
                    <div class="py-6 text-gray-400">Belum ada data.</div>
                @endforelse
            </div>
        </div>

    </div>
</div>
@endsection

@push('scripts')
<script>
    const source   = document.getElementById('source_text');
    const count    = document.getElementById('char_count');
    const out      = document.getElementById('translated_text');
    const btn      = document.getElementById('translate_btn');
    const copyBtn  = document.getElementById('copy_btn');
    const statusEl = document.getElementById('status');
    const loader   = document.getElementById('loader');
    const err      = document.getElementById('error');
    const swapBtn  = document.getElementById('swap_btn');
    const selFrom  = document.getElementById('source_lang');
    const selTo    = document.getElementById('target_lang');
    const csrf     = '{{ csrf_token() }}';

    // Hitung karakter & auto translate
    source.addEventListener('input', () => {
        count.textContent = source.value.length;
        debouncedTranslate();
    });

    // Tukar bahasa
    swapBtn.addEventListener('click', () => {
        const a = selFrom.value;
        selFrom.value = selTo.value;
        selTo.value   = a;
        debouncedTranslate();
    });

    // Tombol translate manual
    btn.addEventListener('click', () => doTranslate());

    // Salin hasil
    copyBtn.addEventListener('click', async () => {
        try {
            await navigator.clipboard.writeText(out.value);
            statusEl.textContent = 'Tersalin';
            setTimeout(() => statusEl.textContent = '', 1500);
        } catch (e) {
            statusEl.textContent = 'Gagal menyalin';
        }
    });

    // Delay untuk auto translate
    let timer = null;
    function debouncedTranslate() {
        clearTimeout(timer);
        if (!source.value.trim()) {
            out.value = '';
            statusEl.textContent = '';
            return;
        }
        timer = setTimeout(() => doTranslate(), 600);
    }

    // Fungsi translate
    async function doTranslate() {
        if (!source.value.trim()) return;
        loader.classList.remove('hidden');
        err.textContent = '';
        statusEl.textContent = '';

        try {
            const resp = await fetch('{{ route('api.translate') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'X-CSRF-TOKEN': csrf
                },
                body: JSON.stringify({
                    text: source.value,
                    from: selFrom.value,
                    to: selTo.value
                })
            });

            const data = await resp.json().catch(() => ({}));
            console.log('DEBUG response:', data);

            if (!resp.ok || !data.success) {
                throw new Error(data.error || 'Gagal menerjemahkan');
            }

            out.value = data.data.translated_text || '(kosong)';
            statusEl.textContent = `${data.data.char_count} karakter • ${data.data.provider}`;
        } catch (e) {
            err.textContent = e.message;
        } finally {
            loader.classList.add('hidden');
        }
    }
</script>
@endpush
